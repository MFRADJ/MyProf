name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  KUBERNETES_NAMESPACE: myprof

jobs:
  build-java:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: [auth-service, profile-service, authorization-service, user-service]

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          cd ${{ matrix.service }}
          mvn clean package -DskipTests
          mvn dependency:tree

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}:buildcache,mode=max

  deploy:
    needs: build-java
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          # Update ConfigMaps if needed
          kubectl apply -f k8s/configmaps/ -n ${{ env.KUBERNETES_NAMESPACE }}
          
          # Update Secrets if needed
          kubectl apply -f k8s/secrets/ -n ${{ env.KUBERNETES_NAMESPACE }}
          
          # Deploy services
          for service in auth-service profile-service authorization-service user-service; do
            kubectl set image deployment/$service $service=${{ env.REGISTRY }}/${{ github.repository }}/$service:${{ github.sha }} -n ${{ env.KUBERNETES_NAMESPACE }}
          done

      - name: Verify deployments
        run: |
          for service in auth-service profile-service authorization-service user-service; do
            kubectl rollout status deployment/$service -n ${{ env.KUBERNETES_NAMESPACE }}
          done

      - name: Run Database Migrations
        run: |
          for service in auth-service profile-service authorization-service; do
            kubectl create job --from=cronjob/db-migration-$service db-migration-$service-${{ github.sha }} -n ${{ env.KUBERNETES_NAMESPACE }}
            kubectl wait --for=condition=complete job/db-migration-$service-${{ github.sha }} -n ${{ env.KUBERNETES_NAMESPACE }} --timeout=300s
          done
